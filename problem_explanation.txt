The way that we tackled the problem of deadlocks was by creating a partial ordering on the threads that acquired the locks. The way we did this was by using cond_wait() in order to make sure that if A and B were comunicating that A would grab it's own lock and then then B's lock and release it and then B would grab A's lock and it's own and then release the lock, scalable to 100 nodes communicating together. For the noisemaker we added a type to Node struct signifying if it is a noisemaker or not. If someone wants to knwo if the program works then they would just have to check the logs to see the random messages that every Node recieved and who it's recieved from. Some parameters that would make syncronization higher probablilty of talking between Nodes, an increased amount of nodes and things of that nature.